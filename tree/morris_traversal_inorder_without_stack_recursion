/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 TreeNode* findPred(TreeNode* root) {
  
    TreeNode* node = root->left;
    while(node->right != NULL && node->right != root) {
        node =node->right;
    }
    return node;
}

vector<int> Solution::inorderTraversal(TreeNode* node) {
    vector<int> ans;
    
    while(node) {
        if(!node->left) {
            ans.push_back(node->val);
            node=node->right;
        }
        else {
            TreeNode* pred;
            pred = findPred(node);
            if(pred->right == node) {
                pred->right == NULL;
                ans.push_back(node->val);
                node=node->right;
            } else {
                pred->right = node;
                node=node->left;
            }
        }
    }
    return ans;
}


